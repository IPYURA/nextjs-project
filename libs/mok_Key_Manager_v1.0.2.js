import dynamic from "next/dynamic";
// import crypto from "crypto";

const _0x531105 = _0x2f04;
(function (_0x165425, _0x5997c1) {
  const _0x1d00e7 = _0x2f04,
    _0x534be3 = _0x165425();
  while (!![]) {
    try {
      const _0x41283f =
        parseInt(_0x1d00e7(0x15a)) / (0xc87 + -0x412 + -0x874) +
        (-parseInt(_0x1d00e7(0x137)) / (-0x1d9f + -0xc1c + 0x29bd)) *
          (-parseInt(_0x1d00e7(0x12e)) / (0x9 + 0x27 * -0x80 + 0x137a)) +
        parseInt(_0x1d00e7(0x159)) / (0x1 * -0x1007 + 0x56e + -0x8f * -0x13) +
        -parseInt(_0x1d00e7(0x161)) / (0x1bb3 + -0x5 * 0x1e2 + -0x1244) +
        -parseInt(_0x1d00e7(0x163)) / (0x95 + -0x14b + 0x5e * 0x2) +
        (-parseInt(_0x1d00e7(0x146)) /
          (0x9 * 0x16f + -0x1 * -0x1f76 + 0x2 * -0x162b)) *
          (-parseInt(_0x1d00e7(0x196)) / (-0x4dd + 0x4 * -0x8a4 + 0x2775)) +
        -parseInt(_0x1d00e7(0x144)) / (-0x39e + -0x84 * 0x2b + 0x19d3);
      if (_0x41283f === _0x5997c1) break;
      else _0x534be3["push"](_0x534be3["shift"]());
    } catch (_0x5b0402) {
      _0x534be3["push"](_0x534be3["shift"]());
    }
  }
})(_0x3041, 0x1 * 0xc759b + -0x66a9 * 0xd + 0x4 * -0x2ed5);
// const fs = require('fs'), crypto = require(_0x531105(0x11d));
const fs = require("fs"),
  crypto = require("crypto");
// const crypto = require('node:crypto');
// const fs = dynamic(()=> import("fs"));
// const crypto = dynamic(() => import(_0x531105(0x11d)));
let serviceId, privateKey;
function _0x3041() {
  const _0x441cbb = [
    "EY-----\x0a",
    "tion",
    "OWavW",
    "from",
    "toString",
    "y\x20파일\x20비밀번호가",
    "\x20PRIVATE\x20K",
    "split",
    "base64",
    "RSA\x20암호화\x20함수",
    "pZsza",
    "utvWQ",
    "sha256",
    "RSA\x20암호화\x20에러",
    "veWQf",
    "IPPLe",
    "xdBZG",
    "createDeci",
    "concat",
    "fKZgS",
    "MOK\x20Key\x20파일",
    "Y-----\x0a",
    "RSAServerE",
    "privateDec",
    "lcdaw",
    "Key가\x20올바르지\x20",
    "zvVmc",
    "JcpGz",
    "wIdvl",
    "createIv",
    "MQdkq",
    "었습니다.\x20",
    "fJAwc",
    "PADDING",
    "pCIud",
    "itqjW",
    "16ccAwsk",
    "PTUqU",
    "slice",
    "cnafU",
    "DxDZO",
    "ncrypt\x20암호화",
    "Hash\x20Excep",
    "parse",
    "VTEDf",
    "publicEncr",
    "RIVATE\x20KEY",
    "getRsaPriv",
    "createHash",
    "crypto",
    "ncrypt",
    "icKey",
    "createCiph",
    "sJifB",
    "aes-256-cb",
    "-----",
    "privateEnc",
    "\x20경로가\x20잘\x20못\x20되",
    "udgbO",
    "eriv",
    "HZqgp",
    "\x20PUBLIC\x20KE",
    "ateKey",
    "입력한\x20Public",
    "RSAEncrypt",
    "utf8",
    "332913wcCBIf",
    "-----END\x20P",
    "setSiteUrl",
    "nGBNx",
    "----",
    "JvDSj",
    "constants",
    "UHLQS",
    "ClientPriv",
    "8mJHyPm",
    "rypt",
    "sRIRK",
    "xILTU",
    "utf-8",
    "않습니다.\x20MOK\x20",
    "hex",
    "JYigJ",
    "trim",
    "qeYyJ",
    "\x20잘\x20못\x20되었습니다",
    "SUjVE",
    "GetToken\x20A",
    "3317274pproHw",
    "-----BEGIN",
    "2168068SweAeC",
    "getSiteUrl",
    "Oqtih",
    "pheriv",
    "dWMXX",
    "WtxSD",
    "update",
    "UBLIC\x20KEY-",
    "\x20오류입니다.",
    "readFileSy",
    "kAngL",
    "getResult",
    "AHfTB",
    "ypt",
    "cQbEA",
    "INWJs",
    "\x20또는\x20MOK\x20Ke",
    "IKlYH",
    "입니다.",
    "39644TbLvts",
    "517577hZbVle",
    "siteUrl",
    "getRsaPubl",
    "uebVy",
    "gkFDk",
    "ServiceId",
    "RSA_PKCS1_",
    "2504515PNefLh",
    "행하시기\x20바랍니다.",
    "1766406pskhOw",
    "keyInit",
    "VyrOI",
    "exports",
    "undefined",
    "LUyny",
    "getService",
    "log",
    "final",
    "randomByte",
    "\x20함수\x20오류입니다.",
    "HPfNl",
    "createKey",
    "PI에서\x20발급후\x20진",
    "digest",
  ];
  _0x3041 = function () {
    return _0x441cbb;
  };
  return _0x3041();
}
function _0x2f04(_0x36961b, _0xc8bdf9) {
  const _0x465ab6 = _0x3041();
  return (
    (_0x2f04 = function (_0x1235f3, _0x30215d) {
      _0x1235f3 = _0x1235f3 - (-0x26fb + -0x683 + -0x395 * -0xd);
      let _0x48e201 = _0x465ab6[_0x1235f3];
      return _0x48e201;
    }),
    _0x2f04(_0x36961b, _0xc8bdf9)
  );
}
class mobileok_Key_Manager {
  constructor() {}

  [_0x531105(0x164)]() {
    const _0x3a677b = "../keys/mok_keyInfo.dat";
    /* 3-2 키파일 비밀번호(본인확인 키파일 패스워드)설정 */
    const _0x5ae4b4 = "livincar123";

    const _0x302877 = _0x531105,
      _0x507afb = {
        IPPLe: _0x302877(0x17a),
        HZqgp: _0x302877(0x186) + _0x302877(0x125) + _0x302877(0x191),
        MQdkq: _0x302877(0x122) + "c",
        LUyny: _0x302877(0x12d),
        VyrOI:
          _0x302877(0x186) +
          _0x302877(0x156) +
          _0x302877(0x177) +
          _0x302877(0x141) +
          ".\x20",
      };
    let _0x1f386a;
    try {
      _0x1f386a = fs[_0x302877(0x14f) + "nc"](
        _0x3a677b,
        _0x507afb[_0x302877(0x181)]
      );
    } catch (_0x3f9b9e) {
      console[_0x302877(0x16a)](_0x507afb[_0x302877(0x128)]);
      console.log(_0x507afb[_0x302877(0x128)]);
    }
    const _0xf029bf = this[_0x302877(0x16f)](_0x5ae4b4),
      _0x2aa50f = this[_0x302877(0x18f)](_0x5ae4b4);
    try {
      let _0x55fbf4 = crypto[_0x302877(0x183) + _0x302877(0x149)](
          _0x507afb[_0x302877(0x190)],
          _0xf029bf,
          _0x2aa50f
        ),
        _0x13d7e2 = _0x55fbf4[_0x302877(0x14c)](
          _0x1f386a,
          _0x507afb[_0x302877(0x181)],
          _0x507afb[_0x302877(0x168)]
        );
      _0x13d7e2 += _0x55fbf4[_0x302877(0x16b)](_0x507afb[_0x302877(0x168)]);
      const _0x580057 = JSON[_0x302877(0x117)](_0x13d7e2);

      console.log(
        (serviceId = _0x580057[_0x302877(0x15f)]),
        (privateKey = _0x580057[_0x302877(0x136) + _0x302877(0x12a)]),
        (privateKey = this[_0x302877(0x11b) + _0x302877(0x12a)](privateKey)),
        _0x13d7e2
      );

      return (
        (serviceId = _0x580057[_0x302877(0x15f)]),
        (privateKey = _0x580057[_0x302877(0x136) + _0x302877(0x12a)]),
        (privateKey = this[_0x302877(0x11b) + _0x302877(0x12a)](privateKey)),
        _0x13d7e2
      );
    } catch (_0x522a42) {
      console[_0x302877(0x16a)](_0x507afb[_0x302877(0x165)]);
      console.log(_0x507afb[_0x302877(0x165)]);
    }
  }
  [_0x531105(0x16f)](_0x2d9b0b) {
    const _0x342bce = _0x531105,
      _0x27d130 = {
        UHLQS: _0x342bce(0x17e),
        HPfNl: _0x342bce(0x13b),
        IKlYH: _0x342bce(0x13d),
        AHfTB: function (_0x2f2ece, _0x54c3ce) {
          return _0x2f2ece + _0x54c3ce;
        },
      };
    let _0x6bad3e = crypto[_0x342bce(0x11c)](_0x27d130[_0x342bce(0x135)])
      [_0x342bce(0x14c)](_0x2d9b0b, _0x27d130[_0x342bce(0x16e)])
      [_0x342bce(0x171)](_0x27d130[_0x342bce(0x157)]);
    const _0x108126 = crypto[_0x342bce(0x11c)](_0x27d130[_0x342bce(0x135)])
      [_0x342bce(0x14c)](_0x6bad3e, _0x27d130[_0x342bce(0x157)])
      [_0x342bce(0x171)](_0x27d130[_0x342bce(0x157)]);
    _0x6bad3e = _0x27d130[_0x342bce(0x152)](
      _0x6bad3e[_0x342bce(0x198)](
        -0x1ec1 + 0x2 * -0x71b + 0x2cf7,
        -0x1 * -0x3e1 + 0x29f * -0xc + 0x1bb3
      ),
      _0x108126[_0x342bce(0x198)](
        0x1 * 0x7c3 + 0x693 + 0x6b * -0x22,
        -0x3 * 0x87 + 0x5 * 0x6df + 0xb5 * -0x2e
      )
    );
    const _0x287c93 = Buffer[_0x342bce(0x175)](
      _0x6bad3e,
      _0x27d130[_0x342bce(0x157)]
    );
    return _0x287c93;
  }
  [_0x531105(0x18f)](_0x112fc5) {
    const _0x77dbe7 = _0x531105,
      _0x128e66 = {
        pZsza: _0x77dbe7(0x17e),
        JYigJ: _0x77dbe7(0x13b),
        dWMXX: _0x77dbe7(0x13d),
      },
      _0x582240 = crypto[_0x77dbe7(0x11c)](_0x128e66[_0x77dbe7(0x17c)])
        [_0x77dbe7(0x14c)](_0x112fc5, _0x128e66[_0x77dbe7(0x13e)])
        [_0x77dbe7(0x171)](_0x128e66[_0x77dbe7(0x14a)]),
      _0x5d5b76 = crypto[_0x77dbe7(0x11c)](_0x128e66[_0x77dbe7(0x17c)])
        [_0x77dbe7(0x14c)](_0x582240, _0x128e66[_0x77dbe7(0x14a)])
        [_0x77dbe7(0x171)](_0x128e66[_0x77dbe7(0x14a)]),
      _0x42632a = _0x5d5b76[_0x77dbe7(0x198)](
        0xeaf + -0xf8 * -0x5 + -0x1387,
        -0x3 * 0x7d5 + -0x204f + 0x1 * 0x37ee
      ),
      _0x4b45e2 = Buffer[_0x77dbe7(0x175)](
        _0x42632a,
        _0x128e66[_0x77dbe7(0x14a)]
      );
    return _0x4b45e2;
  }
  [_0x531105(0x169) + "Id"]() {
    return serviceId;
  }
  [_0x531105(0x130)](_0x2a6528) {
    const _0x831bce = _0x531105;
    this[_0x831bce(0x15b)] = _0x2a6528;
  }
  [_0x531105(0x147)]() {
    const _0x5cfba6 = _0x531105;
    return this[_0x5cfba6(0x15b)];
  }
  [_0x531105(0x12c)](_0x2f4faa) {
    const _0x49ad4f = _0x531105,
      _0x3ac852 = {
        xdBZG: _0x49ad4f(0x12d),
        gkFDk: _0x49ad4f(0x17a),
        cQbEA: _0x49ad4f(0x17f) + _0x49ad4f(0x158),
      };
    try {
      console.log(Buffer.from(_0x2f4faa, _0x3ac852[_0x49ad4f(0x182)]));

      let _0x58780e = crypto.privateEncrypt(
        {
          key: privateKey,
          padding: crypto.constants.RSA_PKCS1_PADDING,
        },
        Buffer.from(_0x2f4faa, _0x3ac852[_0x49ad4f(0x182)])
      )(_0x3ac852[_0x49ad4f(0x15e)]);
      return _0x58780e;
    } catch (_0x3678bb) {
      console.log(_0x3678bb);
      console.log(_0x3ac852[_0x49ad4f(0x154)]);
      // RSA 암호화 에러입니다.
    }
  }
  [_0x531105(0x188) + _0x531105(0x11e)](_0x284ebe, _0x4110f6) {
    const _0x36db43 = _0x531105,
      _0x335c56 = {
        zvVmc: function (_0x3c1b4a, _0x1c84f2) {
          return _0x3c1b4a == _0x1c84f2;
        },
        nGBNx: _0x36db43(0x167),
        SUjVE: function (_0x34786d, _0x2501b7) {
          return _0x34786d == _0x2501b7;
        },
        uebVy: function (_0x481446, _0x38a8f2) {
          return _0x481446 == _0x38a8f2;
        },
        Oqtih:
          _0x36db43(0x12b) +
          _0x36db43(0x18b) +
          _0x36db43(0x13c) +
          _0x36db43(0x143) +
          _0x36db43(0x170) +
          _0x36db43(0x162),
        PTUqU: _0x36db43(0x17e),
        xILTU: _0x36db43(0x13b),
        sJifB: _0x36db43(0x17a),
        wIdvl: _0x36db43(0x13d),
        cnafU: function (_0x37abf5, _0x148dc3) {
          return _0x37abf5 + _0x148dc3;
        },
        kAngL: function (_0x3251c4, _0x3850ba) {
          return _0x3251c4 + _0x3850ba;
        },
        udgbO: _0x36db43(0x122) + "c",
        qeYyJ: _0x36db43(0x17b) + _0x36db43(0x14e),
        DxDZO: _0x36db43(0x188) + _0x36db43(0x115) + _0x36db43(0x16d),
      };
    try {
      if (
        _0x335c56[_0x36db43(0x18c)](
          _0x284ebe[_0x36db43(0x13f)](),
          _0x335c56[_0x36db43(0x131)]
        ) ||
        _0x335c56[_0x36db43(0x18c)](undefined, _0x284ebe[_0x36db43(0x13f)]()) ||
        _0x335c56[_0x36db43(0x142)](
          typeof _0x335c56[_0x36db43(0x131)],
          _0x284ebe[_0x36db43(0x13f)]()
        ) ||
        _0x335c56[_0x36db43(0x15d)](
          typeof undefined,
          _0x284ebe[_0x36db43(0x13f)]()
        )
      )
        throw MOKException;
    } catch (_0x17726e) {
      console[_0x36db43(0x16a)](_0x335c56[_0x36db43(0x148)]);
      console.log(_0x335c56[_0x36db43(0x148)]);
    }
    try {
      _0x284ebe = this[_0x36db43(0x15c) + _0x36db43(0x11f)](_0x284ebe);
      const _0x3cbe9c = crypto[_0x36db43(0x11c)](_0x335c56[_0x36db43(0x197)])
          [_0x36db43(0x14c)](_0x4110f6, _0x335c56[_0x36db43(0x13a)])
          [_0x36db43(0x171)](_0x335c56[_0x36db43(0x121)]),
        _0x1f48ff = crypto[_0x36db43(0x16c) + "s"](
          -0x1841 + -0x7 * -0x54d + -0x12 * 0xb5
        ),
        _0x3912dc = crypto[_0x36db43(0x16c) + "s"](
          -0xebf * -0x1 + -0x21ea + -0x133b * -0x1
        );
      let _0x268ba7 = Buffer[_0x36db43(0x184)]([_0x1f48ff, _0x3912dc]);
      (_0x268ba7 = _0x268ba7[_0x36db43(0x176)](_0x335c56[_0x36db43(0x18e)])),
        (_0x268ba7 = Buffer[_0x36db43(0x175)](
          _0x268ba7,
          _0x335c56[_0x36db43(0x18e)]
        )[_0x36db43(0x176)](_0x335c56[_0x36db43(0x121)]));
      const _0x250e35 = _0x335c56[_0x36db43(0x113)](
          _0x335c56[_0x36db43(0x150)](_0x268ba7, "|"),
          _0x3cbe9c
        ),
        _0x1b6674 = crypto[_0x36db43(0x120) + _0x36db43(0x127)](
          _0x335c56[_0x36db43(0x126)],
          _0x1f48ff,
          _0x3912dc
        );
      let _0x5e63e1 = _0x1b6674[_0x36db43(0x14c)](
        _0x4110f6,
        _0x335c56[_0x36db43(0x13a)],
        _0x335c56[_0x36db43(0x121)]
      );
      _0x5e63e1 += _0x1b6674[_0x36db43(0x16b)](_0x335c56[_0x36db43(0x121)]);
      let _0x21a02a;
      try {
        _0x21a02a = crypto[_0x36db43(0x119) + _0x36db43(0x153)](
          {
            key: _0x284ebe,
            oaepHash: _0x335c56[_0x36db43(0x197)],
          },
          Buffer[_0x36db43(0x175)](_0x250e35)
        )[_0x36db43(0x176)](_0x335c56[_0x36db43(0x121)]);
      } catch (_0x56fffc) {
        console[_0x36db43(0x16a)](_0x335c56[_0x36db43(0x140)]);
        console.log(_0x335c56[_0x36db43(0x140)]);
      }
      return _0x335c56[_0x36db43(0x150)](
        _0x335c56[_0x36db43(0x113)](_0x21a02a, "|"),
        _0x5e63e1
      );
    } catch (_0xc686ca) {
      console[_0x36db43(0x16a)](_0x335c56[_0x36db43(0x114)]);
      console.log(_0x335c56[_0x36db43(0x114)]);
    }
  }
  [_0x531105(0x151)](_0x36aaf7) {
    const _0x18f076 = _0x531105,
      _0x35b0a9 = {
        OWavW: _0x18f076(0x17a),
        JvDSj: _0x18f076(0x12d),
        itqjW: _0x18f076(0x13d),
        pCIud: _0x18f076(0x122) + "c",
        veWQf: _0x18f076(0x17e),
        fJAwc: function (_0xc65d3f, _0x101967) {
          return _0xc65d3f !== _0x101967;
        },
        WtxSD: _0x18f076(0x116) + _0x18f076(0x173),
      };
    let _0x32bc28 =
      _0x36aaf7[_0x18f076(0x179)]("|")[
        -0x55 * 0x1f + -0x67f * -0x2 + -0x2b3 * 0x1
      ];
    const _0x3f3ded =
      _0x36aaf7[_0x18f076(0x179)]("|")[
        -0x133 * -0x3 + 0x95 * 0x30 + -0x1 * 0x1f88
      ];
    let _0x5c014 = crypto[_0x18f076(0x189) + _0x18f076(0x138)](
        {
          key: privateKey,
          padding:
            crypto[_0x18f076(0x134)][_0x18f076(0x160) + _0x18f076(0x193)],
        },
        Buffer[_0x18f076(0x175)](_0x32bc28, _0x35b0a9[_0x18f076(0x174)])
      )[_0x18f076(0x176)](_0x35b0a9[_0x18f076(0x133)]),
      _0x2e52b3 =
        _0x5c014[_0x18f076(0x176)]()[_0x18f076(0x179)]("|")[
          -0x8 * -0x319 + -0x1 * 0x1bb6 + 0x177 * 0x2
        ];
    (_0x2e52b3 = Buffer[_0x18f076(0x175)](
      _0x2e52b3,
      _0x35b0a9[_0x18f076(0x174)]
    )[_0x18f076(0x176)](_0x35b0a9[_0x18f076(0x195)])),
      (_0x2e52b3 = Buffer[_0x18f076(0x175)](
        _0x2e52b3,
        _0x35b0a9[_0x18f076(0x195)]
      ));
    const _0x42a8a0 = _0x2e52b3[_0x18f076(0x198)](
        0x18a3 + 0x168 * -0xf + -0x38b,
        -0x1 * -0x197e + -0x4 * 0x688 + 0x1 * 0xc2
      ),
      _0x4060e5 = _0x2e52b3[_0x18f076(0x198)](
        0x217 * 0x7 + -0x1195 * 0x2 + 0x14a9,
        0x208 * 0xb + 0x55 * -0x47 + 0x3 * 0x79
      ),
      _0x318f4a =
        _0x5c014[_0x18f076(0x176)]()[_0x18f076(0x179)]("|")[
          -0xf58 + 0x80 * -0x1d + 0x1dd9
        ];
    let _0x780256 = crypto[_0x18f076(0x183) + _0x18f076(0x149)](
        _0x35b0a9[_0x18f076(0x194)],
        _0x42a8a0,
        _0x4060e5
      ),
      _0x385af1 = _0x780256[_0x18f076(0x14c)](
        _0x3f3ded,
        _0x35b0a9[_0x18f076(0x174)],
        _0x35b0a9[_0x18f076(0x133)]
      );
    _0x385af1 += _0x780256[_0x18f076(0x16b)](_0x35b0a9[_0x18f076(0x133)]);
    const _0x496b5e = crypto[_0x18f076(0x11c)](_0x35b0a9[_0x18f076(0x180)])
      [_0x18f076(0x14c)](_0x385af1, _0x35b0a9[_0x18f076(0x133)])
      [_0x18f076(0x171)](_0x35b0a9[_0x18f076(0x174)]);
    if (_0x35b0a9[_0x18f076(0x192)](_0x496b5e, _0x318f4a))
      throw new Exception(_0x35b0a9[_0x18f076(0x14b)]);
    return _0x385af1;
  }
  [_0x531105(0x11b) + _0x531105(0x12a)](_0x1fe360) {
    const _0xc345b6 = _0x531105,
      _0x25ba23 = {
        sRIRK: function (_0xc7c3d9, _0xed8fa7) {
          return _0xc7c3d9 + _0xed8fa7;
        },
        INWJs: _0xc345b6(0x145) + _0xc345b6(0x178) + _0xc345b6(0x172),
        VTEDf: _0xc345b6(0x12f) + _0xc345b6(0x11a) + _0xc345b6(0x123),
      };
    return _0x25ba23[_0xc345b6(0x139)](
      _0x25ba23[_0xc345b6(0x139)](
        _0x25ba23[_0xc345b6(0x139)](_0x25ba23[_0xc345b6(0x155)], _0x1fe360),
        "\x0a"
      ),
      _0x25ba23[_0xc345b6(0x118)]
    );
  }
  [_0x531105(0x15c) + _0x531105(0x11f)](_0xab0adb) {
    const _0x32a21d = _0x531105,
      _0x2b37be = {
        fKZgS: function (_0x37774, _0x90dbb0) {
          return _0x37774 + _0x90dbb0;
        },
        JcpGz: function (_0x498a52, _0x5343aa) {
          return _0x498a52 + _0x5343aa;
        },
        lcdaw: _0x32a21d(0x145) + _0x32a21d(0x129) + _0x32a21d(0x187),
        utvWQ: _0x32a21d(0x12f) + _0x32a21d(0x14d) + _0x32a21d(0x132),
      };
    return _0x2b37be[_0x32a21d(0x185)](
      _0x2b37be[_0x32a21d(0x18d)](
        _0x2b37be[_0x32a21d(0x185)](_0x2b37be[_0x32a21d(0x18a)], _0xab0adb),
        "\x0a"
      ),
      _0x2b37be[_0x32a21d(0x17d)]
    );
  }
}

// console.log("애휴" + _0x36db43(0x16a));

// module.exports = new mobileok_Key_Manager();

// const rawMobileOK = new mobileok_Key_Manager();
// export default MobileOK[_0x531105(0x166)];
